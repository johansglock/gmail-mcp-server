// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Gmail MCP Server Support",
            "url": "https://github.com/yourusername/gmail-mcp-server"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns HTML page with server information, configuration, and available tools",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Server Information Page",
                "responses": {
                    "200": {
                        "description": "HTML page with server information",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns server health status and metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthStatus"
                        }
                    }
                }
            }
        },
        "/mcp": {
            "get": {
                "description": "Experimental MCP JSON-RPC endpoint for tool execution. For full MCP support, use stdio mode.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mcp"
                ],
                "summary": "MCP JSON-RPC Endpoint",
                "parameters": [
                    {
                        "description": "JSON-RPC request (optional for GET)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.MCPResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Experimental MCP JSON-RPC endpoint for tool execution. For full MCP support, use stdio mode.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mcp"
                ],
                "summary": "MCP JSON-RPC Endpoint",
                "parameters": [
                    {
                        "description": "JSON-RPC request (optional for GET)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.MCPResponse"
                        }
                    }
                }
            },
            "options": {
                "description": "Experimental MCP JSON-RPC endpoint for tool execution. For full MCP support, use stdio mode.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mcp"
                ],
                "summary": "MCP JSON-RPC Endpoint",
                "parameters": [
                    {
                        "description": "JSON-RPC request (optional for GET)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.MCPResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.HealthStatus": {
            "type": "object",
            "properties": {
                "gmail_authenticated": {
                    "type": "boolean",
                    "example": true
                },
                "server": {
                    "type": "string",
                    "example": "Gmail MCP Server"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-10-18T12:00:00Z"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "main.MCPResponse": {
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Gmail MCP Server API",
	Description:      "HTTP API for Gmail MCP Server with tools for email management, drafts, and attachments",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
